version: '3.7'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.17.0.1 #rodar o comando ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+' para descobrir o ip
      #KAFKA_ADVERTISED_HOST_NAME: "$(ip -4 addr show docker0 | grep -Po 'inet \\K[\\d.]+')"
      #HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      #HOSTNAME_COMMAND: "$(ip -4 addr show docker0 | grep -Po 'inet \\K[\\d.]+')"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #KAFKA_CREATE_TOPICS: "sales-analysis-input:2:2"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  sales-analyzer:
    depends_on:
      - kafka
    build:
      context: .
      dockerfile: analyzer.Dockerfile
    deploy:
      mode: replicated
      replicas: 2
    environment: 
      KAFKA_SERVER: kafka:9092
    command: ["/wait-for-it.sh", "kafka:9092", "--", "dotnet", "SalesAnalyzer.ConsoleApp.dll", "--KAFKA_SERVER=$KAFKA_SERVER"]      
  sales-processor:
    depends_on:
      - kafka
    build:
      context: .
      dockerfile: processor.Dockerfile
    environment: 
      KAFKA_SERVER: kafka:9092
    command: ["/wait-for-it.sh", "kafka:9092", "--", "dotnet", "SalesProcessor.ConsoleApp.dll","app01", "kafka:9092", "data/in", "data/out"]      

